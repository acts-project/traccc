# TRACCC library, part of the ACTS project (R&D line)
#
# (c) 2022-2023 CERN for the benefit of the ACTS project
#
# Mozilla Public License Version 2.0

# Set up the helper functions/macros.
@PACKAGE_INIT@

# Remember the options that traccc was built with.
set( TRACCC_BUILD_CUDA     @TRACCC_BUILD_CUDA@ )
set( TRACCC_BUILD_SYCL     @TRACCC_BUILD_SYCL@ )
set( TRACCC_BUILD_FUTHARK  @TRACCC_BUILD_FUTHARK@ )
set( TRACCC_BUILD_KOKKOS   @TRACCC_BUILD_KOKKOS@ )
set( TRACCC_BUILD_EXAMPLES @TRACCC_BUILD_EXAMPLES@ )
set( TRACCC_USE_ROOT       @TRACCC_USE_ROOT@ )

# Set up some simple variables for using the package.
set( traccc_VERSION "@PROJECT_VERSION@" )
set_and_check( traccc_INCLUDE_DIR "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@" )
set_and_check( traccc_LIBRARY_DIR "@PACKAGE_CMAKE_INSTALL_LIBDIR@" )
set_and_check( traccc_CMAKE_DIR   "@PACKAGE_CMAKE_INSTALL_CMAKEDIR@" )

# Make the "traccc modules" visible to CMake.
list( APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}" )

# Find all packages that traccc needs to function.
include( CMakeFindDependencyMacro )
find_dependency( Eigen3 )
find_dependency( Thrust )
find_dependency( dfelibs )
if( TRACCC_BUILD_KOKKOS )
   find_dependency( Kokkos )
endif()
if( TRACCC_BUILD_FUTHARK )
   find_dependency( Futhark )
endif()
find_dependency( Acts )
find_dependency( vecmem )
find_dependency( algebra-plugins )
find_dependency( detray )
if( TRACCC_BUILD_EXAMPLES )
   find_dependency( Boost COMPONENTS program_options )
   if( TRACCC_USE_ROOT )
      find_dependency( ROOT COMPONENTS Core RIO Tree Hist )
   endif()
endif()

# Set up the traccc::Thrust target.
set( TRACCC_THRUST_OPTIONS @TRACCC_THRUST_OPTIONS@ )
thrust_create_target( traccc::Thrust ${TRACCC_THRUST_OPTIONS} )

# Include the file listing all the imported targets and options.
include( "${traccc_CMAKE_DIR}/traccc-config-targets.cmake" )

# Print a standard information message about the package being found.
include( FindPackageHandleStandardArgs )
find_package_handle_standard_args( traccc REQUIRED_VARS
   CMAKE_CURRENT_LIST_FILE
   VERSION_VAR traccc_VERSION )
