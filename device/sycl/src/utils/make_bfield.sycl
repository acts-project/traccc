/** TRACCC library, part of the ACTS project (R&D line)
 *
 * (c) 2025 CERN for the benefit of the ACTS project
 *
 * Mozilla Public License Version 2.0
 */

// Local include(s).
#include "bfield.hpp"
#include "get_queue.hpp"
#include "traccc/sycl/utils/make_bfield.hpp"

// Project include(s).
#include "traccc/definitions/common.hpp"

// Covfie include(s).
#include <covfie/sycl/utility/copy.hpp>

// System include(s).
#include <stdexcept>

namespace traccc::sycl {

bfield make_bfield(const bfield& field, queue_wrapper& queue) {

    if (field.is<const_bfield_backend_t<scalar>>()) {
        return bfield{covfie::field<const_bfield_backend_t<scalar>>{
            field.get_covfie_field<const_bfield_backend_t<scalar>>()}};
    } else if (field.is<traccc::inhom_bfield_backend_t<scalar>>()) {
        ::sycl::queue& sycl_queue = details::get_queue(queue);
        bfield result{covfie::utility::sycl::copy_field_with_queue<
            covfie::field<sycl::inhom_bfield_backend_t<scalar>>>(
            field.get_covfie_field<traccc::inhom_bfield_backend_t<scalar>>(),
            sycl_queue)};
        sycl_queue.wait_and_throw();
        return result;
    } else {
        throw std::invalid_argument("Unsupported b-field type received");
    }
}

}  // namespace traccc::sycl
