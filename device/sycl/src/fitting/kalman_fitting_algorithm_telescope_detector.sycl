/** TRACCC library, part of the ACTS project (R&D line)
 *
 * (c) 2022-2025 CERN for the benefit of the ACTS project
 *
 * Mozilla Public License Version 2.0
 */

// Local include(s).
#include "../utils/get_queue.hpp"
#include "../utils/magnetic_field_types.hpp"
#include "kalman_fitting.hpp"
#include "traccc/sycl/fitting/kalman_fitting_algorithm.hpp"

// Project include(s).
#include "traccc/bfield/magnetic_field_types.hpp"

namespace traccc::sycl {
namespace kernels {
template <typename bfield_tag_t>
struct fit_tracks_telescope_detector;
}  // namespace kernels

kalman_fitting_algorithm::output_type kalman_fitting_algorithm::operator()(
    const telescope_detector::view& det, const magnetic_field& bfield,
    const edm::track_candidate_container<default_algebra>::const_view&
        track_candidates) const {

    // Perform the track fitting using the templated implementation.
    return magnetic_field_visitor<sycl::bfield_type_list<scalar>>(
        bfield, [&]<typename bfield_view_t>(const bfield_view_t& bfield_view) {
            return details::kalman_fitting<
                kernels::fit_tracks_telescope_detector<
                    bfield_tag_selector_t<typename bfield_view_t::backend_t>>,
                telescope_detector::device>(det, bfield_view, track_candidates,
                                            m_config, m_mr, m_copy.get(),
                                            details::get_queue(m_queue));
        });
}

}  // namespace traccc::sycl
