/** TRACCC library, part of the ACTS project (R&D line)
 *
 * (c) 2025 CERN for the benefit of the ACTS project
 *
 * Mozilla Public License Version 2.0
 */

// Local include(s).
#include "../utils/get_queue.hpp"
#include "traccc/sycl/clusterization/measurement_sorting_algorithm.hpp"

// oneDPL include(s).
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wshadow"
#pragma clang diagnostic ignored "-Wunused-parameter"
#pragma clang diagnostic ignored "-Wshorten-64-to-32"
#pragma clang diagnostic ignored "-Wsign-conversion"
#pragma clang diagnostic ignored "-Wimplicit-int-conversion"
#pragma clang diagnostic ignored "-Wsign-compare"
#include <oneapi/dpl/algorithm>
#include <oneapi/dpl/execution>
#pragma clang diagnostic pop

// SYCL include(s).
#include <sycl/sycl.hpp>

namespace traccc::sycl {

measurement_sorting_algorithm::measurement_sorting_algorithm(
    vecmem::copy& copy, queue_wrapper& queue,
    std::unique_ptr<const Logger> logger)
    : messaging(std::move(logger)), m_copy{copy}, m_queue{queue} {}

measurement_sorting_algorithm::output_type
measurement_sorting_algorithm::operator()(
    const measurement_collection_types::view& measurements_view) const {

    // Get the SYCL queue to use for the algorithm.
    ::sycl::queue& queue = details::get_queue(m_queue.get());

    // oneDPL policy to use, forcing execution onto the same device that the
    // hand-written kernels would run on.
    auto policy = oneapi::dpl::execution::device_policy{queue};

    // Get the number of measurements. This is necessary because the input
    // container may not be fixed sized. And we can't give invalid pointers /
    // iterators to oneDPL.
    const measurement_collection_types::view::size_type n_measurements =
        m_copy.get().get_size(measurements_view);

    // Sort the measurements in place
    oneapi::dpl::sort(policy, measurements_view.ptr(),
                      measurements_view.ptr() + n_measurements,
                      measurement_sort_comp());
    queue.wait_and_throw();

    // Return the view of the sorted measurements.
    return measurements_view;
}

}  // namespace traccc::sycl
